---
interface Props {
	title: string;
}

const { title } = Astro.props;
const items = [
	{
		icon: "",
		name: "Casper",
	},
	{
		icon: "",
		name: "Opcion 2",
	},
	{
		icon: "",
		name: "Opcion 3",
	},
];
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
		<header>Aca va el encabezado</header>
		<div class="carrousel">Slider de imagenes</div>
		<nav>
			{
				items.map((item) => (
					<a href="#" class="option">
						<svg
							xmlns="http://www.w3.org/2000/svg"
							width="24"
							height="24"
							viewBox="0 0 24 24"
							style="fill: rgba(0, 0, 0, 1);transform: ;msFilter:;"
						>
							<path d="M3 11v8h.051c.245 1.692 1.69 3 3.449 3 1.174 0 2.074-.417 2.672-1.174a3.99 3.99 0 0 0 5.668-.014c.601.762 1.504 1.188 2.66 1.188 1.93 0 3.5-1.57 3.5-3.5V11c0-4.962-4.037-9-9-9s-9 4.038-9 9zm6 1c-1.103 0-2-.897-2-2s.897-2 2-2 2 .897 2 2-.897 2-2 2zm6-4c1.103 0 2 .897 2 2s-.897 2-2 2-2-.897-2-2 .897-2 2-2z" />
						</svg>
						{item.name}
					</a>
				))
			}
		</nav>
		<div class="grid-container">
			<div class="wrapper">
				<div class="box img1">img1</div>
				<div class="box img2">img2</div>
				<div class="box img3">img3</div>
				<div class="box img4">img4</div>
				<div class="box img5">img5</div>
				<div class="box img6">img6</div>
				<div class="box img7">img7</div>
				<div class="box img8">img8</div>
				<div class="box img9">img9</div>
				<div class="box img10">img10</div>
			</div>
		</div>
	</body>
</html>
<style is:global>
	.wrapper{
		display: grid;
		grid-template-rows: 120px 120px 120px 120px;
		grid-template-areas: "img1 img1 img2 img3"
							 "img1 img1 img6 img6"
							 "img4 img5 img6 img6"
							 "img7 img8 img9 img10"
		;
	}
	.box{
		display: flex;
		font-family: Verdana;
		align-items: center;
		justify-content: center;
		font-weight: bold;
		color: white;
	}
	.img1{
		grid-area: img1;
		background: orange
	}
	.img2{
		grid-area: img2;
		background: black;
	}
	.img3{
		grid-area: img3;
		background: green
	}
	.img4{
		grid-area: img4;
		background: wheat;
	}
	.img5{
		grid-area: img5;
		background: pink;
	}
	.img6{
		grid-area: img6;
		background: firebrick;
	}
	.img7{
		grid-area: img7;
		background: blueviolet;
	}
	.img8{
		grid-area: img8;
		background: blue;
	}
	.img9{
		grid-area: img9;
		background: khaki;
	}
	.img10{
		grid-area: img10;
		background: hotpink;
	}

	.option{
		text-decoration: none;
		display: flex;
		flex-direction: column;
		background: yellow;
		width: 120px;
		height: 100%;
		justify-content: center;
		align-items: center;
		transition: background 300ms ease-in-out;
		color: black;
		font-size: 20px;
		&:hover{
			background: orange;
		}
	}
	nav{
		background: rgb(60, 255, 0);
		height: 60px;
		display: flex;
	}
	header{
		background: red;
		height: 36px;

	}
	:root {
		--accent: 136, 58, 234;
		--accent-light: 224, 204, 250;
		--accent-dark: 49, 10, 101;
		--accent-gradient: linear-gradient(
			45deg,
			rgb(var(--accent)),
			rgb(var(--accent-light)) 30%,
			white 60%
		);
	}
	html {
		font-family: system-ui, sans-serif;
	}
	code {
		font-family:
			Menlo,
			Monaco,
			Lucida Console,
			Liberation Mono,
			DejaVu Sans Mono,
			Bitstream Vera Sans Mono,
			Courier New,
			monospace;
	}

</style>
